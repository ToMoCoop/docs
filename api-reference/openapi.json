{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://sandbox.mintlify.com"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/sites": {
      "post": {
        "summary": "Create a Site",
        "deprecated": false,
        "description": "",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "$ref": "#/components/schemas/Site"
                      }
                    },
                    "required": [
                      "attributes"
                    ]
                  }
                },
                "required": [
                  "data"
                ],
                "$ref": "#/components/schemas/Site1"
              },
              "example": {
                "data": {
                  "attributes": {
                    "code": "SITE55",
                    "name": "Site 55"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique identifier of the resource.",
                      "readOnly": true
                    },
                    "code": {
                      "type": "string",
                      "description": "The unique code for the site. This can be any series of characters that are unique to your operation.",
                      "title": "",
                      "maxLength": 50
                    },
                    "name": {
                      "type": "string",
                      "description": "The identifiable name of the site.",
                      "maxLength": 50
                    },
                    "tier": {
                      "type": "string",
                      "description": "The tier of the site related to the Control of major accident hazards (COMAH) Establishment Tier.\n\nIf you store or use more than the lower threshold for a dangerous substance your site is classed as a \"lower\" tier establishment. If you store or use more than the higher threshold your site is an \"upper\" tier establishment.\n\nIf this does not apply to your site, then select \"none\".",
                      "enum": [
                        "none",
                        "lower",
                        "upper"
                      ],
                      "default": "none"
                    },
                    "boolean1": {
                      "type": "boolean",
                      "description": "A bespoke field that can be used to store any custom true or false value against the resource.",
                      "nullable": true
                    },
                    "boolean2": {
                      "type": "boolean",
                      "description": "A bespoke field that can be used to store any custom true or false value against the resource.",
                      "nullable": true
                    },
                    "boolean3": {
                      "type": "boolean",
                      "description": "A bespoke field that can be used to store any custom true or false value against the resource.",
                      "nullable": true
                    },
                    "boolean4": {
                      "type": "boolean",
                      "description": "A bespoke field that can be used to store any custom true or false value against the resource.",
                      "nullable": true
                    },
                    "boolean5": {
                      "type": "boolean",
                      "description": "A bespoke field that can be used to store any custom true or false value against the resource.",
                      "nullable": true
                    },
                    "datetime1": {
                      "type": "string",
                      "format": "date-time",
                      "examples": [
                        "2023-11-09T10:06:36.593+00:00"
                      ],
                      "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
                      "maxLength": 29,
                      "minLength": 29,
                      "description": "A bespoke field that can be used to store any custom date time value against the resource.",
                      "nullable": true
                    },
                    "datetime2": {
                      "type": "string",
                      "format": "date-time",
                      "examples": [
                        "2023-11-09T10:06:36.593+00:00"
                      ],
                      "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
                      "maxLength": 29,
                      "minLength": 29,
                      "description": "A bespoke field that can be used to store any custom date time value against the resource.",
                      "nullable": true
                    },
                    "datetime3": {
                      "type": "string",
                      "format": "date-time",
                      "examples": [
                        "2023-11-09T10:06:36.593+00:00"
                      ],
                      "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
                      "maxLength": 29,
                      "minLength": 29,
                      "description": "A bespoke field that can be used to store any custom date time value against the resource.",
                      "nullable": true
                    },
                    "datetime4": {
                      "type": "string",
                      "format": "date-time",
                      "examples": [
                        "2023-11-09T10:06:36.593+00:00"
                      ],
                      "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
                      "maxLength": 29,
                      "minLength": 29,
                      "description": "A bespoke field that can be used to store any custom date time value against the resource.",
                      "nullable": true
                    },
                    "datetime5": {
                      "type": "string",
                      "format": "date-time",
                      "examples": [
                        "2023-11-09T10:06:36.593+00:00"
                      ],
                      "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
                      "maxLength": 29,
                      "minLength": 29,
                      "description": "A bespoke field that can be used to store any custom date time value against the resource.",
                      "nullable": true
                    },
                    "default": {
                      "type": "boolean",
                      "default": false,
                      "description": "A true or false value that indicates whether this site will be the default site for new Warehouses. \n\nOnly one Site can be set as the default at any one point.\nIf true is set for the creation or update of a Site, then this will become the default if it so not already."
                    },
                    "external_system_reference1": {
                      "type": "string",
                      "description": "A field commonly use to associate the resource with the reference of a matching entity in an external system.",
                      "nullable": true
                    },
                    "external_system_reference2": {
                      "type": "string",
                      "description": "A field commonly use to associate the resource with the reference of a matching entity in an external system.",
                      "nullable": true
                    },
                    "external_system_reference3": {
                      "type": "string",
                      "description": "A field commonly use to associate the resource with the reference of a matching entity in an external system.",
                      "nullable": true
                    },
                    "integer1": {
                      "type": "integer",
                      "description": "A bespoke field that can be used to store any custom numerical (integer) value against the resource.",
                      "nullable": true
                    },
                    "integer2": {
                      "type": "integer",
                      "description": "A bespoke field that can be used to store any custom numerical (integer) value against the resource.",
                      "nullable": true
                    },
                    "integer3": {
                      "type": "integer",
                      "description": "A bespoke field that can be used to store any custom numerical (integer) value against the resource.",
                      "nullable": true
                    },
                    "integer4": {
                      "type": "integer",
                      "description": "A bespoke field that can be used to store any custom numerical (integer) value against the resource.",
                      "nullable": true
                    },
                    "integer5": {
                      "type": "integer",
                      "description": "A bespoke field that can be used to store any custom numerical (integer) value against the resource.",
                      "nullable": true
                    },
                    "string1": {
                      "type": "string",
                      "description": "A bespoke field that can be used to store any text against the resource.",
                      "nullable": true
                    },
                    "string2": {
                      "type": "string",
                      "description": "A bespoke field that can be used to store any text against the resource.",
                      "nullable": true
                    },
                    "string3": {
                      "type": "string",
                      "description": "A bespoke field that can be used to store any text against the resource.",
                      "nullable": true
                    },
                    "string4": {
                      "type": "string",
                      "description": "A bespoke field that can be used to store any text against the resource.",
                      "nullable": true
                    },
                    "string5": {
                      "type": "string",
                      "description": "A bespoke field that can be used to store any text against the resource.",
                      "nullable": true
                    },
                    "created_at": {
                      "type": "string",
                      "description": "The date and time the resource was created in ISO-8601 format.",
                      "format": "date-time",
                      "maxLength": 29,
                      "minLength": 29,
                      "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
                      "examples": [
                        "2023-11-09T10:06:36.593+00:00"
                      ],
                      "readOnly": true
                    },
                    "updated_at": {
                      "type": "string",
                      "description": "The date and time the resource was last updated in ISO-8601 format.",
                      "format": "date-time",
                      "examples": [
                        "2023-11-09T10:06:36.593+00:00"
                      ],
                      "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
                      "maxLength": 29,
                      "minLength": 29,
                      "readOnly": true
                    }
                  },
                  "required": [
                    "id",
                    "code",
                    "name",
                    "tier"
                  ]
                }
              }
            },
            "headers": {}
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/plants": {
      "get": {
        "description": "Returns all plants from the system that the user has access to",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Plant response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Plant"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new plant in the store",
        "requestBody": {
          "description": "Plant to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "plant response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Plant"
                }
              }
            }
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/plants/{id}": {
      "delete": {
        "description": "Deletes a single plant based on the ID supplied",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of plant to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Plant deleted",
            "content": {}
          },
          "400": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Site": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique identifier of the resource.",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "The unique code for the site. This can be any series of characters that are unique to your operation.",
            "title": "",
            "maxLength": 50
          },
          "name": {
            "type": "string",
            "description": "The identifiable name of the site.",
            "maxLength": 50
          },
          "tier": {
            "type": "string",
            "description": "The tier of the site related to the Control of major accident hazards (COMAH) Establishment Tier.\n\nIf you store or use more than the lower threshold for a dangerous substance your site is classed as a \"lower\" tier establishment. If you store or use more than the higher threshold your site is an \"upper\" tier establishment.\n\nIf this does not apply to your site, then select \"none\".",
            "enum": [
              "none",
              "lower",
              "upper"
            ],
            "default": "none"
          },
          "boolean1": {
            "type": "boolean",
            "description": "A bespoke field that can be used to store any custom true or false value against the resource.",
            "nullable": true
          },
          "boolean2": {
            "type": "boolean",
            "description": "A bespoke field that can be used to store any custom true or false value against the resource.",
            "nullable": true
          },
          "boolean3": {
            "type": "boolean",
            "description": "A bespoke field that can be used to store any custom true or false value against the resource.",
            "nullable": true
          },
          "boolean4": {
            "type": "boolean",
            "description": "A bespoke field that can be used to store any custom true or false value against the resource.",
            "nullable": true
          },
          "boolean5": {
            "type": "boolean",
            "description": "A bespoke field that can be used to store any custom true or false value against the resource.",
            "nullable": true
          },
          "datetime1": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2023-11-09T10:06:36.593+00:00"
            ],
            "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
            "maxLength": 29,
            "minLength": 29,
            "description": "A bespoke field that can be used to store any custom date time value against the resource.",
            "nullable": true
          },
          "datetime1_formatted": {
            "type": "string",
            "description": "The datetime1 field in readable format, localised to UTC.",
            "readOnly": true,
            "format": "date-time",
            "examples": [
              "09/11/2023 10:06"
            ],
            "pattern": "^\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{2}:\\\\d{2}$",
            "maxLength": 16,
            "minLength": 16,
            "nullable": true
          },
          "datetime2": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2023-11-09T10:06:36.593+00:00"
            ],
            "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
            "maxLength": 29,
            "minLength": 29,
            "description": "A bespoke field that can be used to store any custom date time value against the resource.",
            "nullable": true
          },
          "datetime2_formatted": {
            "type": "string",
            "description": "The datetime2 field in readable format, localised to UTC.",
            "readOnly": true,
            "format": "date-time",
            "examples": [
              "09/11/2023 10:06"
            ],
            "pattern": "^\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{2}:\\\\d{2}$",
            "maxLength": 16,
            "minLength": 16,
            "nullable": true
          },
          "datetime3": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2023-11-09T10:06:36.593+00:00"
            ],
            "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
            "maxLength": 29,
            "minLength": 29,
            "description": "A bespoke field that can be used to store any custom date time value against the resource.",
            "nullable": true
          },
          "datetime3_formatted": {
            "type": "string",
            "description": "The datetime3 field in readable format, localised to UTC.",
            "readOnly": true,
            "format": "date-time",
            "examples": [
              "09/11/2023 10:06"
            ],
            "pattern": "^\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{2}:\\\\d{2}$",
            "maxLength": 16,
            "minLength": 16,
            "nullable": true
          },
          "datetime4": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2023-11-09T10:06:36.593+00:00"
            ],
            "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
            "maxLength": 29,
            "minLength": 29,
            "description": "A bespoke field that can be used to store any custom date time value against the resource.",
            "nullable": true
          },
          "datetime4_formatted": {
            "type": "string",
            "description": "The datetime4 field in readable format, localised to UTC.",
            "readOnly": true,
            "format": "date-time",
            "examples": [
              "09/11/2023 10:06"
            ],
            "pattern": "^\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{2}:\\\\d{2}$",
            "maxLength": 16,
            "minLength": 16,
            "nullable": true
          },
          "datetime5": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2023-11-09T10:06:36.593+00:00"
            ],
            "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
            "maxLength": 29,
            "minLength": 29,
            "description": "A bespoke field that can be used to store any custom date time value against the resource.",
            "nullable": true
          },
          "datetime5_formatted": {
            "type": "string",
            "description": "The datetime5 field in readable format, localised to UTC.",
            "readOnly": true,
            "format": "date-time",
            "examples": [
              "09/11/2023 10:06"
            ],
            "pattern": "^\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{2}:\\\\d{2}$",
            "maxLength": 16,
            "minLength": 16,
            "nullable": true
          },
          "default": {
            "type": "boolean",
            "default": false,
            "description": "A true or false value that indicates whether this site will be the default site for new Warehouses. \n\nOnly one Site can be set as the default at any one point.\nIf true is set for the creation or update of a Site, then this will become the default if it so not already."
          },
          "external_system_reference1": {
            "type": "string",
            "description": "A field commonly use to associate the resource with the reference of a matching entity in an external system.",
            "nullable": true
          },
          "external_system_reference2": {
            "type": "string",
            "description": "A field commonly use to associate the resource with the reference of a matching entity in an external system.",
            "nullable": true
          },
          "external_system_reference3": {
            "type": "string",
            "description": "A field commonly use to associate the resource with the reference of a matching entity in an external system.",
            "nullable": true
          },
          "integer1": {
            "type": "integer",
            "description": "A bespoke field that can be used to store any custom numerical (integer) value against the resource.",
            "nullable": true
          },
          "integer2": {
            "type": "integer",
            "description": "A bespoke field that can be used to store any custom numerical (integer) value against the resource.",
            "nullable": true
          },
          "integer3": {
            "type": "integer",
            "description": "A bespoke field that can be used to store any custom numerical (integer) value against the resource.",
            "nullable": true
          },
          "integer4": {
            "type": "integer",
            "description": "A bespoke field that can be used to store any custom numerical (integer) value against the resource.",
            "nullable": true
          },
          "integer5": {
            "type": "integer",
            "description": "A bespoke field that can be used to store any custom numerical (integer) value against the resource.",
            "nullable": true
          },
          "string1": {
            "type": "string",
            "description": "A bespoke field that can be used to store any text against the resource.",
            "nullable": true
          },
          "string2": {
            "type": "string",
            "description": "A bespoke field that can be used to store any text against the resource.",
            "nullable": true
          },
          "string3": {
            "type": "string",
            "description": "A bespoke field that can be used to store any text against the resource.",
            "nullable": true
          },
          "string4": {
            "type": "string",
            "description": "A bespoke field that can be used to store any text against the resource.",
            "nullable": true
          },
          "string5": {
            "type": "string",
            "description": "A bespoke field that can be used to store any text against the resource.",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "description": "The date and time the resource was created in ISO-8601 format.",
            "format": "date-time",
            "maxLength": 29,
            "minLength": 29,
            "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
            "examples": [
              "2023-11-09T10:06:36.593+00:00"
            ],
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "description": "The date and time the resource was last updated in ISO-8601 format.",
            "format": "date-time",
            "examples": [
              "2023-11-09T10:06:36.593+00:00"
            ],
            "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{3}[+-]\\\\d{2}:\\\\d{2}$",
            "maxLength": 29,
            "minLength": 29,
            "readOnly": true
          },
          "created_at_formatted": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "examples": [
              "09/11/2023 10:06"
            ],
            "pattern": "^\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{2}:\\\\d{2}$",
            "maxLength": 16,
            "minLength": 16,
            "description": "The date and time the resource was created in readable format, localised to UTC."
          },
          "updated_at_formatted": {
            "type": "string",
            "readOnly": true,
            "format": "date-time",
            "examples": [
              "09/11/2023 10:06"
            ],
            "pattern": "^\\\\d{2}/\\\\d{2}/\\\\d{4} \\\\d{2}:\\\\d{2}$",
            "maxLength": 16,
            "minLength": 16,
            "description": "The date and time the resource was last updated in readable format, localised to UTC."
          }
        },
        "required": [
          "id",
          "name",
          "tier",
          "code"
        ]
      },
      "Site1": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "attributes": {
                "$ref": "#/components/schemas/Site",
                "description": "The attributes of the Site resource."
              }
            },
            "required": [
              "attributes"
            ],
            "description": "The data object wrapper."
          }
        },
        "required": [
          "data"
        ],
        "description": "The body of the request."
      },
      "Plant": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the plant",
            "type": "string"
          },
          "tag": {
            "description": "Tag to specify the type",
            "type": "string"
          }
        }
      },
      "NewPlant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Plant"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "description": "Identification number of the plant",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Error": {
        "required": [
          "error",
          "message"
        ],
        "type": "object",
        "properties": {
          "error": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}